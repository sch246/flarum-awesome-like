{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,c,MCExDC,GAAAA,aAAiBC,IAAI,8BAA8B,WACjDC,QAAQC,IAAI,uDACd,ICJA,MAAM,EAA+BN,OAAOC,KAAKC,OAAO,a,aCExDC,IAAAA,aAAiBC,IAAI,8BAA8B,WAIjDD,IAAAA,cAAiB,IACV,uBACJI,gBACC,CACEC,QAAS,2BACTC,MAAON,IAAAA,WAAeO,MAAM,wCAC5BC,KAAM,SACNC,QAAS,CACP,IAAOT,IAAAA,WAAeO,MAAM,iCAC5B,GAAMP,IAAAA,WAAeO,MAAM,gCAC3B,KAAQP,IAAAA,WAAeO,MAAM,mCAE/BG,QAAS,SAGZN,gBACC,CACEC,QAAS,4BACTC,MAAON,IAAAA,WAAeO,MAAM,yCAC5BC,KAAM,SACNC,QAAS,CACP,IAAOT,IAAAA,WAAeO,MAAM,iCAC5B,GAAMP,IAAAA,WAAeO,MAAM,gCAC3B,KAAQP,IAAAA,WAAeO,MAAM,mCAE/BG,QAAS,QAGjB,G","sources":["webpack://@sch246/flarum-awesome-like/webpack/bootstrap","webpack://@sch246/flarum-awesome-like/webpack/runtime/compat get default export","webpack://@sch246/flarum-awesome-like/webpack/runtime/define property getters","webpack://@sch246/flarum-awesome-like/webpack/runtime/hasOwnProperty shorthand","webpack://@sch246/flarum-awesome-like/external root \"flarum.core.compat['common/app']\"","webpack://@sch246/flarum-awesome-like/./src/common/index.ts","webpack://@sch246/flarum-awesome-like/external root \"flarum.core.compat['admin/app']\"","webpack://@sch246/flarum-awesome-like/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('sch246/flarum-awesome-like', () => {\n  console.log('[sch246/flarum-awesome-like] Hello, forum and admin!');\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","import app from 'flarum/admin/app';\n\napp.initializers.add('sch246/flarum-awesome-like', () => {\n  // console.log('[sch246/flarum-awesome-like] Hello, admin!');\n\n  \n  app.extensionData\n    .for('sch246-awesome-like')\n    .registerSetting(\n      {\n        setting: 'sch246-awesome-like.like',\n        label: app.translator.trans('sch246-awesome-like.admin.like_label'),\n        type: 'select',\n        options: {\n          'off': app.translator.trans('sch246-awesome-like.admin.off'),\n          'on': app.translator.trans('sch246-awesome-like.admin.on'),\n          'only': app.translator.trans('sch246-awesome-like.admin.only'),\n        },\n        default: 'only',\n      }\n    )\n    .registerSetting(\n      {\n        setting: 'sch246-awesome-like.reply',\n        label: app.translator.trans('sch246-awesome-like.admin.reply_label'),\n        type: 'select',\n        options: {\n          'off': app.translator.trans('sch246-awesome-like.admin.off'),\n          'on': app.translator.trans('sch246-awesome-like.admin.on'),\n          'only': app.translator.trans('sch246-awesome-like.admin.only'),\n        },\n        default: 'only',\n      }\n    )\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","add","console","log","registerSetting","setting","label","trans","type","options","default"],"sourceRoot":""}